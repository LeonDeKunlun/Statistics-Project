---
title: "Untitled"
format: pdf
editor_options:
  chunk_output_type: console
---

```{r}
# load packages
library(tidyverse)
library(jsonlite)
```

```{r}
# set locale
sys_locale <- "en_GB.utf8"
Sys.setlocale(locale = sys_locale)
weekends <- lubridate::make_date(day = 3:4) %>% lubridate::wday(label = TRUE)

# set global theme
ggplot2::theme_set(
  new =
    ggplot2::theme_minimal(base_size = 12) +
    ggplot2::theme(
      axis.line = ggplot2::theme_classic()$axis.line))
```

```{r}
# read the data
gas_demand <-
  utils::read.csv(
    file = "Scotland_Gas_Demand_and_CWV_01-01-2021_31-12-2024.csv",
    check.names = FALSE) %>%
  dplyr::mutate(
    `Gas Day` = `Applicable For` %>% as.Date(format = "%d/%m/%Y"),
    dplyr::across(
      `Data Item`,
      . %>% dplyr::case_match(
        "Demand Actual, LDZ (SC), D+6" ~ "Gas Demand",
        "Composite Weather Variable, Actual, LDZ(SC), D+1" ~
          "Composite Weather Variable"))) %>%
  dplyr::select(`Gas Day`, `Data Item`, Value, `Quality Indicator`)
```

```{r}
# fetch public holiday data
holidays <-
  jsonlite::fromJSON(
    txt = "https://www.gov.uk/bank-holidays.json"
  )$scotland$events %>%
  dplyr::mutate(
    Date = date %>% as.Date(format = "%Y-%m-%d"),
    Holiday = title %>% stringr::str_remove(pattern = " \\(.*\\)"),
    .keep = "none")
```

```{r}
quality_colour <- c("grey", "A" = "red", "L" = "orange")

plot_item_vs_time <- function(item) {
  gas_demand %>%
    dplyr::filter(`Data Item` == item) %>%
    ggplot2::ggplot(
      mapping = ggplot2::aes(
        x = `Gas Day`,
        y = Value,
        colour = `Quality Indicator`)) +
    ggplot2::scale_colour_manual(values = quality_colour) +
    ggplot2::geom_point(size = 1) +
    ggplot2::labs(
      y = item,
      title = paste(item, "vs Gas Day"))
}

plot_item_vs_quality <- function(item) {
  gas_demand %>%
    dplyr::filter(`Data Item` == item) %>%
    ggplot2::ggplot(
      mapping = ggplot2::aes(
        x = `Quality Indicator`,
        y = Value,
        colour = `Quality Indicator`)) +
    ggplot2::scale_colour_manual(values = quality_colour) +
    ggplot2::geom_boxplot(
      outliers = FALSE,
      varwidth = TRUE) +
    ggplot2::geom_violin(
      mapping = ggplot2::aes(
        fill = ggplot2::after_scale(scales::alpha(colour, 0.38))),
      data = . %>% dplyr::filter(`Quality Indicator` == ""),
      show.legend = FALSE) +
    ggplot2::geom_dotplot(
      mapping = ggplot2::aes(
        fill = ggplot2::after_scale(scales::alpha(colour, 0.38))),
      data = . %>% dplyr::filter(`Quality Indicator` != ""),
      binaxis = "y",
      stackdir = "center",
      dotsize = 0.5) +
    ggplot2::labs(
      y = item,
      title = paste(item, "vs Quality Indicator"))
}
```

```{r}
plot_item_vs_time("Gas Demand")
```

```{r}
plot_item_vs_quality("Gas Demand")
```

```{r}
plot_item_vs_time("Composite Weather Variable")
```

```{r}
plot_item_vs_quality("Composite Weather Variable")
```

```{r}
gas_demand_wide <-
  gas_demand %>%
  # remove outliers
  dplyr::mutate(
    Value =
      dplyr::case_when(
        `Data Item` == "Gas Demand" & `Quality Indicator` == "A" ~ NA,
        `Data Item` == "Gas Demand" & Value == 5.4 ~ NA,
        .default = Value)) %>%
  # transform the data frame
  tidyr::pivot_wider(
    id_cols = `Gas Day`,
    names_from = `Data Item`,
    values_from = Value) %>%
  # order the data by Date
  dplyr::arrange(`Gas Day`) %>%
  # add day of the week
  dplyr::mutate(
    `Day of the Week` = `Gas Day` %>% lubridate::wday(label = TRUE)) %>%
  # add public holiday data
  dplyr::left_join(
    holidays,
    by = dplyr::join_by(`Gas Day` == Date),
    relationship = "one-to-one") %>%
  dplyr::mutate(
    Holiday =
      dplyr::case_when(
        !is.na(Holiday) ~ "bank holiday",
        `Day of the Week` %in% weekends ~ "weekend",
        .default = "none"))
```

```{r}
gas_demand_wide %>%
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      x = `Gas Day`,
      y = `Gas Demand`)) +
  ggplot2::geom_line() +
  ggplot2::coord_cartesian(ylim = c(0, NA)) +
  ggplot2::labs(title = "Gas Demand vs Gas Day")
```

```{r}
gas_demand_wide %>%
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      x = `Gas Day`,
      y = `Composite Weather Variable`)) +
  ggplot2::geom_line() +
  ggplot2::labs(title = "Composite Weather Variable vs Gas Day")
```

```{r}
gas_demand_wide %>%
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      x = `Composite Weather Variable`,
      y = `Gas Demand`)) +
  ggplot2::geom_point(size = 1) +
  ggplot2::labs(title = "Gas Demand vs Composite Weather Variable")
```

```{r}
gas_demand_wide %>%
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      x = `Composite Weather Variable`,
      y = `Gas Demand`,
      colour = Holiday)) +
  ggplot2::geom_point(size = 1) +
  ggplot2::labs(title = "Gas Demand vs Composite Weather Variable")
```



